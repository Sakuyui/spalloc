# Copyright (c) 2023 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[metadata]
name = spalloc
version = attr: spalloc._version.__version__
description = A client for the spalloc_server SpiNNaker machine partitioning and allocation system.
#long_description = file: README.rst
#long_description_content_type = text/x-rst
url = https://github.com/SpiNNakerManchester/spalloc
license = Apache-2.0
classifiers =
        Development Status :: 5 - Production/Stable
        Intended Audience :: Developers
        Intended Audience :: Science/Research
        License :: OSI Approved :: Apache License 2.0
        Natural Language :: English
        Operating System :: POSIX :: Linux
        Operating System :: Microsoft :: Windows
        Operating System :: MacOS
        Programming Language :: Python :: 3
        Programming Language :: Python :: 3.7
        Programming Language :: Python :: 3.8
        Programming Language :: Python :: 3.9
        Programming Language :: Python :: 3.10
        Programming Language :: Python :: 3.11
maintainer = SpiNNakerTeam
maintainer_email = spinnakerusers@googlegroups.com
keywords =
        spinnaker
        allocation
        packing management
        supercomputer

[options]
python_requires = >=3.7, <4
packages = find:
zip_safe = True
include_package_data = True
install_requires =
        jsonschema
        SpiNNUtilities == 1!6.0.1

[options.extras_require]
test =
        flake8 >= 5.0
        coverage >= 4.4, < 5.0
        # pytest will be brought in by pytest-cov
        pytest-cov
        pytest-timeout
        mock